#!/usr/bin/env python
import sys, os

def depends(ctx):
    ctx('pywrap')
    ctx('euter')

def options(opt):
    pass

def configure(cfg):
    pass

def build(bld):

    bld(
            target          = 'cellparameters_inc',
            export_includes = '../include',
    )

    bld(
            target          = 'cellparameters_access',
            features        = 'cxx cxxshlib pyembed',
            use             = [ 'euter', 'boost_serialization', 'pywrap', 'cellparameters_inc'],
            source          = bld.path.parent.ant_glob('src/pycellparameters/*.cpp'),
            install_path    = '${PREFIX}/lib',
    )

    bld(
            target          = 'test-pyparameteraccess',
            features        = 'gtest cxx cxxprogram pyembed', # KHS: quickfix, fixing pyembed could be better
            source          = bld.path.ant_glob('test/*.cpp'),
            use             = 'cellparameters_access',
            install_path    = '${PREFIX}/bin/tests',
    )


    if bld.env.build_python_bindings:
        bld(
                target          = 'pycellparameters',
                features        = 'cxx cxxshlib pypp pyext pyembed',
                script          = 'generate.py',
                gen_defines     = 'PYPLUSPLUS __STRICT_ANSI__ BOOST_PP_VARIADICS',
                headers         = 'bindings.h',
                use             = ['cellparameters_access', 'pywrap', 'pywrapstdvector'],
                install_path    = '${PREFIX}/lib',
        )

        bld(
                features        = 'pytest',
                tests           = bld.path.ant_glob('test/test_*.py'),
                use             = ['pycellparameters'],
                install_path    = '${PREFIX}/bin/tests',
        )
    #bld.add_post_fun(summary)
